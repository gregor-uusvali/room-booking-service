spring.application.name=RoomBookingService

# Security with custom credentials
# spring.security.user.name=admin
# spring.security.user.password=password
# spring.security.user.roles=USER

# Database Configuration - MySQL
spring.datasource.url=jdbc:mysql://localhost:3307/room_booking_service
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.username=root
spring.datasource.password=root

# MySQL Specific Properties
spring.jpa.properties.hibernate.connection.useSSL=false
spring.jpa.properties.hibernate.connection.serverTimezone=UTC
spring.jpa.properties.hibernate.connection.allowPublicKeyRetrieval=true

# JPA/Hibernate Configuration
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=true

# Flyway Configuration
spring.flyway.enabled=true
spring.flyway.baseline-on-migrate=true
spring.flyway.baseline-version=0

# Server conf
server.port=8080
server.ssl.enabled=true

# Github Login
# spring.security.oauth2.client.registration.github.client-id=
# spring.security.oauth2.client.registration.github.client-secret=

# Google Login
# spring.security.oauth2.client.registration.google.client-id=
# spring.security.oauth2.client.registration.google.client-secret=
# spring.security.oauth2.client.registration.google.scope=profile,email

# Logging
logging.level.org.springframework.security=TRACE

# RSA keys
rsa.private-key=classpath:certs/private.pem
rsa.public-key=classpath:certs/public.pem

# HTTPS settings
# The format used for the keystore. It could be set to JKS in case it is a JKS file
server.ssl.key-store-type=PKCS12
# The path to the keystore containing the certificate
server.ssl.key-store=classpath:keystore/roombookingservice.p12
# The password used to generate the certificate
server.ssl.key-store-password=password
# The alias mapped to the certificate
server.ssl.key-alias=roombookingservice
